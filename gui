-- Custom UI Library by iLib
local iLib = {}

-- Colors
iLib.Colors = {
    Primary = Color3.fromRGB(25, 25, 25),
    Secondary = Color3.fromRGB(35, 35, 35),
    Accent = Color3.fromRGB(0, 170, 255),
    Text = Color3.fromRGB(255, 255, 255),
    Border = Color3.fromRGB(50, 50, 50)
}

-- Create Main Window
function iLib:CreateWindow(name)
    local Window = {}
    
    -- ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "iLib_" .. name
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.Parent = game:GetService("CoreGui")
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 600, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    MainFrame.BackgroundColor3 = iLib.Colors.Primary
    MainFrame.BorderColor3 = iLib.Colors.Border
    MainFrame.BorderSizePixel = 1
    MainFrame.Parent = ScreenGui
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = iLib.Colors.Secondary
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "TitleLabel"
    TitleLabel.Size = UDim2.new(1, -60, 1, 0)
    TitleLabel.Position = UDim2.new(0, 10, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = name
    TitleLabel.TextColor3 = iLib.Colors.Text
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 14
    TitleLabel.Parent = TitleBar
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -30, 0, 0)
    CloseButton.BackgroundColor3 = iLib.Colors.Secondary
    CloseButton.BorderSizePixel = 0
    CloseButton.Text = "X"
    CloseButton.TextColor3 = iLib.Colors.Text
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 14
    CloseButton.Parent = TitleBar
    
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    -- Tabs Container
    local TabsContainer = Instance.new("Frame")
    TabsContainer.Name = "TabsContainer"
    TabsContainer.Size = UDim2.new(0, 120, 1, -30)
    TabsContainer.Position = UDim2.new(0, 0, 0, 30)
    TabsContainer.BackgroundColor3 = iLib.Colors.Secondary
    TabsContainer.BorderSizePixel = 0
    TabsContainer.Parent = MainFrame
    
    -- Content Container
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Size = UDim2.new(1, -120, 1, -30)
    ContentContainer.Position = UDim2.new(0, 120, 0, 30)
    ContentContainer.BackgroundColor3 = iLib.Colors.Primary
    ContentContainer.BorderSizePixel = 0
    ContentContainer.Parent = MainFrame
    
    -- Make draggable
    local dragging = false
    local dragInput, dragStart, startPos
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    -- Tab functions
    Window.Tabs = {}
    
    function Window:CreateTab(name)
        local Tab = {}
        
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name .. "Tab"
        TabButton.Size = UDim2.new(1, 0, 0, 40)
        TabButton.Position = UDim2.new(0, 0, 0, #Window.Tabs * 40)
        TabButton.BackgroundColor3 = iLib.Colors.Secondary
        TabButton.BorderSizePixel = 0
        TabButton.Text = name
        TabButton.TextColor3 = iLib.Colors.Text
        TabButton.Font = Enum.Font.Gotham
        TabButton.TextSize = 12
        TabButton.Parent = TabsContainer
        
        -- Tab Content
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = name .. "Content"
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.Position = UDim2.new(0, 0, 0, 0)
        TabContent.BackgroundTransparency = 1
        TabContent.BorderSizePixel = 0
        TabContent.ScrollBarThickness = 3
        TabContent.ScrollBarImageColor3 = iLib.Colors.Accent
        TabContent.Visible = false
        TabContent.Parent = ContentContainer
        
        local UIListLayout = Instance.new("UIListLayout")
        UIListLayout.Parent = TabContent
        UIListLayout.Padding = UDim.new(0, 5)
        
        -- Tab button click event
        TabButton.MouseButton1Click:Connect(function()
            for _, content in pairs(ContentContainer:GetChildren()) do
                if content:IsA("ScrollingFrame") then
                    content.Visible = false
                end
            end
            TabContent.Visible = true
            
            for _, button in pairs(TabsContainer:GetChildren()) do
                if button:IsA("TextButton") then
                    button.BackgroundColor3 = iLib.Colors.Secondary
                end
            end
            TabButton.BackgroundColor3 = iLib.Colors.Accent
        end)
        
        -- Make first tab active by default
        if #Window.Tabs == 0 then
            TabContent.Visible = true
            TabButton.BackgroundColor3 = iLib.Colors.Accent
        end
        
        -- Section function
        function Tab:CreateSection(name)
            local Section = {}
            
            local SectionFrame = Instance.new("Frame")
            SectionFrame.Name = name .. "Section"
            SectionFrame.Size = UDim2.new(1, -20, 0, 30)
            SectionFrame.Position = UDim2.new(0, 10, 0, #TabContent:GetChildren() * 35)
            SectionFrame.BackgroundColor3 = iLib.Colors.Secondary
            SectionFrame.BorderSizePixel = 0
            SectionFrame.Parent = TabContent
            
            local SectionLabel = Instance.new("TextLabel")
            SectionLabel.Name = "SectionLabel"
            SectionLabel.Size = UDim2.new(1, -10, 1, 0)
            SectionLabel.Position = UDim2.new(0, 10, 0, 0)
            SectionLabel.BackgroundTransparency = 1
            SectionLabel.Text = name
            SectionLabel.TextColor3 = iLib.Colors.Text
            SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
            SectionLabel.Font = Enum.Font.GothamBold
            SectionLabel.TextSize = 12
            SectionLabel.Parent = SectionFrame
            
            Section.Elements = {}
            
            -- Toggle function
            function Section:CreateToggle(name, callback)
                local Toggle = {}
                local toggled = false
                
                local ToggleFrame = Instance.new("Frame")
                ToggleFrame.Name = name .. "Toggle"
                ToggleFrame.Size = UDim2.new(1, -20, 0, 25)
                ToggleFrame.Position = UDim2.new(0, 10, 0, #SectionFrame:GetChildren() * 30)
                ToggleFrame.BackgroundColor3 = iLib.Colors.Primary
                ToggleFrame.BorderSizePixel = 0
                ToggleFrame.Parent = SectionFrame
                
                local ToggleButton = Instance.new("TextButton")
                ToggleButton.Name = "ToggleButton"
                ToggleButton.Size = UDim2.new(1, 0, 1, 0)
                ToggleButton.BackgroundTransparency = 1
                ToggleButton.Text = ""
                ToggleButton.Parent = ToggleFrame
                
                local ToggleLabel = Instance.new("TextLabel")
                ToggleLabel.Name = "ToggleLabel"
                ToggleLabel.Size = UDim2.new(1, -30, 1, 0)
                ToggleLabel.Position = UDim2.new(0, 5, 0, 0)
                ToggleLabel.BackgroundTransparency = 1
                ToggleLabel.Text = name
                ToggleLabel.TextColor3 = iLib.Colors.Text
                ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
                ToggleLabel.Font = Enum.Font.Gotham
                ToggleLabel.TextSize = 11
                ToggleLabel.Parent = ToggleFrame
                
                local ToggleBox = Instance.new("Frame")
                ToggleBox.Name = "ToggleBox"
                ToggleBox.Size = UDim2.new(0, 20, 0, 20)
                ToggleBox.Position = UDim2.new(1, -25, 0.5, -10)
                ToggleBox.BackgroundColor3 = iLib.Colors.Secondary
                ToggleBox.BorderSizePixel = 0
                ToggleBox.Parent = ToggleFrame
                
                local ToggleFill = Instance.new("Frame")
                ToggleFill.Name = "ToggleFill"
                ToggleFill.Size = UDim2.new(0, 14, 0, 14)
                ToggleFill.Position = UDim2.new(0.5, -7, 0.5, -7)
                ToggleFill.BackgroundColor3 = iLib.Colors.Accent
                ToggleFill.BorderSizePixel = 0
                ToggleFill.Visible = false
                ToggleFill.Parent = ToggleBox
                
                ToggleButton.MouseButton1Click:Connect(function()
                    toggled = not toggled
                    ToggleFill.Visible = toggled
                    if callback then
                        callback(toggled)
                    end
                end)
                
                function Toggle:Set(state)
                    toggled = state
                    ToggleFill.Visible = state
                    if callback then
                        callback(state)
                    end
                end
                
                table.insert(Section.Elements, ToggleFrame)
                return Toggle
            end
            
            -- Button function
            function Section:CreateButton(name, callback)
                local ButtonFrame = Instance.new("Frame")
                ButtonFrame.Name = name .. "Button"
                ButtonFrame.Size = UDim2.new(1, -20, 0, 25)
                ButtonFrame.Position = UDim2.new(0, 10, 0, #SectionFrame:GetChildren() * 30)
                ButtonFrame.BackgroundColor3 = iLib.Colors.Primary
                ButtonFrame.BorderSizePixel = 0
                ButtonFrame.Parent = SectionFrame
                
                local Button = Instance.new("TextButton")
                Button.Name = "Button"
                Button.Size = UDim2.new(1, 0, 1, 0)
                Button.BackgroundColor3 = iLib.Colors.Accent
                Button.BorderSizePixel = 0
                Button.Text = name
                Button.TextColor3 = iLib.Colors.Text
                Button.Font = Enum.Font.Gotham
                Button.TextSize = 11
                Button.Parent = ButtonFrame
                
                Button.MouseButton1Click:Connect(function()
                    if callback then
                        callback()
                    end
                end)
                
                table.insert(Section.Elements, ButtonFrame)
            end
            
            table.insert(Window.Tabs, Tab)
            return Section
        end
        
        table.insert(Window.Tabs, Tab)
        return Tab
    end
    
    return Window
end

return iLib
